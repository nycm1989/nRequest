import 'package:n_request/n_request.dart' show StatusData, StatusType;

const List<StatusData> statusList = [
    StatusData(type: StatusType.information,  isValid: false, code: 100, description: "Continue"                        ),
    StatusData(type: StatusType.information,  isValid: false, code: 101, description: "Switching Protocols"             ),
    StatusData(type: StatusType.information,  isValid: false, code: 102, description: "Processing"                      ),
    StatusData(type: StatusType.information,  isValid: false, code: 103, description: "Early Hints"                     ),
    StatusData(type: StatusType.successful,   isValid: true,  code: 200, description: "OK"                              ),
    StatusData(type: StatusType.successful,   isValid: true,  code: 201, description: "Created"                         ),
    StatusData(type: StatusType.successful,   isValid: true,  code: 202, description: "Accepted"                        ),
    StatusData(type: StatusType.unsuccessful, isValid: false, code: 204, description: "No Content"                      ),
    StatusData(type: StatusType.unsuccessful, isValid: false, code: 203, description: "Non-Authoritative Information"   ),
    StatusData(type: StatusType.unsuccessful, isValid: false, code: 205, description: "Reset Content"                   ),
    StatusData(type: StatusType.unsuccessful, isValid: false, code: 206, description: "Partial Content"                 ),
    StatusData(type: StatusType.unsuccessful, isValid: false, code: 207, description: "Multi-Status"                    ),
    StatusData(type: StatusType.unsuccessful, isValid: false, code: 208, description: "Already Reported"                ),
    StatusData(type: StatusType.unsuccessful, isValid: false, code: 226, description: "IM Used"                         ),
    StatusData(type: StatusType.redirection,  isValid: false, code: 300, description: "Multiple Choices"                ),
    StatusData(type: StatusType.redirection,  isValid: false, code: 301, description: "Moved Permanently"               ),
    StatusData(type: StatusType.redirection,  isValid: false, code: 302, description: "Found"                           ),
    StatusData(type: StatusType.redirection,  isValid: false, code: 303, description: "See Other"                       ),
    StatusData(type: StatusType.redirection,  isValid: false, code: 304, description: "Not Modified"                    ),
    StatusData(type: StatusType.redirection,  isValid: false, code: 305, description: "Use Proxy"                       ),
    StatusData(type: StatusType.redirection,  isValid: false, code: 306, description: "unused"                          ),
    StatusData(type: StatusType.redirection,  isValid: false, code: 307, description: "Temporary Redirect"              ),
    StatusData(type: StatusType.redirection,  isValid: false, code: 308, description: "Permanent Redirect"              ),
    StatusData(type: StatusType.clientError,  isValid: false, code: 400, description: "Bad Request"                     ),
    StatusData(type: StatusType.clientError,  isValid: false, code: 401, description: "Unauthorized"                    ),
    StatusData(type: StatusType.clientError,  isValid: false, code: 402, description: "Payment Required"                ),
    StatusData(type: StatusType.clientError,  isValid: false, code: 403, description: "Forbidden"                       ),
    StatusData(type: StatusType.clientError,  isValid: false, code: 404, description: "Not Found"                       ),
    StatusData(type: StatusType.clientError,  isValid: false, code: 405, description: "Method Not Allowed"              ),
    StatusData(type: StatusType.clientError,  isValid: false, code: 406, description: "Not Acceptable"                  ),
    StatusData(type: StatusType.clientError,  isValid: false, code: 407, description: "Proxy Authentication Required"   ),
    StatusData(type: StatusType.clientError,  isValid: false, code: 408, description: "Request Timeout"                 ),
    StatusData(type: StatusType.clientError,  isValid: false, code: 409, description: "Conflict"                        ),
    StatusData(type: StatusType.clientError,  isValid: false, code: 410, description: "Gone"                            ),
    StatusData(type: StatusType.clientError,  isValid: false, code: 411, description: "Length Required"                 ),
    StatusData(type: StatusType.clientError,  isValid: false, code: 412, description: "Precondition Failed"             ),
    StatusData(type: StatusType.clientError,  isValid: false, code: 413, description: "Payload Too Large"               ),
    StatusData(type: StatusType.clientError,  isValid: false, code: 414, description: "URI Too Long"                    ),
    StatusData(type: StatusType.clientError,  isValid: false, code: 415, description: "Unsupported Media Type"          ),
    StatusData(type: StatusType.clientError,  isValid: false, code: 416, description: "Range Not Satisfiable"           ),
    StatusData(type: StatusType.clientError,  isValid: false, code: 417, description: "Expectation Failed"              ),
    StatusData(type: StatusType.clientError,  isValid: false, code: 418, description: "I'm a teapot"                    ),
    StatusData(type: StatusType.clientError,  isValid: false, code: 421, description: "Misdirected Request"             ),
    StatusData(type: StatusType.clientError,  isValid: false, code: 422, description: "Unprocessable Content"           ),
    StatusData(type: StatusType.clientError,  isValid: false, code: 423, description: "Locked"                          ),
    StatusData(type: StatusType.clientError,  isValid: false, code: 424, description: "Failed Dependency"               ),
    StatusData(type: StatusType.clientError,  isValid: false, code: 425, description: "Too Early"                       ),
    StatusData(type: StatusType.clientError,  isValid: false, code: 426, description: "Upgrade Required"                ),
    StatusData(type: StatusType.clientError,  isValid: false, code: 428, description: "Precondition Required"           ),
    StatusData(type: StatusType.clientError,  isValid: false, code: 429, description: "Too Many Requests"               ),
    StatusData(type: StatusType.clientError,  isValid: false, code: 431, description: "Request Header Fields Too Large" ),
    StatusData(type: StatusType.clientError,  isValid: false, code: 451, description: "Unavailable For Legal Reasons"   ),
    StatusData(type: StatusType.serverError,  isValid: false, code: 500, description: "Internal Server Error"           ),
    StatusData(type: StatusType.serverError,  isValid: false, code: 501, description: "Not Implemented"                 ),
    StatusData(type: StatusType.serverError,  isValid: false, code: 502, description: "Bad Gateway"                     ),
    StatusData(type: StatusType.serverError,  isValid: false, code: 503, description: "Service Unavailable"             ),
    StatusData(type: StatusType.serverError,  isValid: false, code: 504, description: "Gateway Timeout"                 ),
    StatusData(type: StatusType.serverError,  isValid: false, code: 505, description: "HTTP Version Not Supported"      ),
    StatusData(type: StatusType.serverError,  isValid: false, code: 506, description: "Variant Also Negotiates"         ),
    StatusData(type: StatusType.serverError,  isValid: false, code: 507, description: "Insufficient Storage"            ),
    StatusData(type: StatusType.serverError,  isValid: false, code: 508, description: "Loop Detected"                   ),
    StatusData(type: StatusType.serverError,  isValid: false, code: 510, description: "Not Extended"                    ),
    StatusData(type: StatusType.serverError,  isValid: false, code: 511, description: "Network Authentication Required" ),
  ];